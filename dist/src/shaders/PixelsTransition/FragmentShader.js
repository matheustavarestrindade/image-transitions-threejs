import { FromShaderToy } from "../FromShaderToy";
export var loadFragmentShader = function (debugMode) {
    return FromShaderToy("\n    uniform ivec2 size; // = ivec2(10, 10)\n    uniform float smoothness; // = 0.5\n\n    float rand (vec2 co) {\n          return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n    }        \n    \n    void mainImage( out vec4 fragColor, in vec2 fragCoord ) {\n        vec2 uv = fragCoord/iResolution.xy;\n        float r = rand(floor(vec2(size) * uv));\n        float progress = sin(iTime * 0.5) * 0.5 + 0.5;\n        float m = smoothstep(0.0, -smoothness, r - ( smoothstep(0.15, 0.9, progress) * (1.0 + smoothness)));\n        fragColor =  mix(texture(firstTexture, uv), texture(secondTexture,uv), m);\n    }\n\n", debugMode);
};
//# sourceMappingURL=FragmentShader.js.map